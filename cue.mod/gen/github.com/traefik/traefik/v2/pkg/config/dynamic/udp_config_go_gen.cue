// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/traefik/traefik/v2/pkg/config/dynamic

package dynamic

// UDPConfiguration contains all the UDP configuration parameters.
#UDPConfiguration: {
	routers?: {[string]: null | #UDPRouter} @go(Routers,map[string]*UDPRouter) @toml(routers,omitempty)
	services?: {[string]: null | #UDPService} @go(Services,map[string]*UDPService) @toml(services,omitempty)
}

// UDPService defines the configuration for a UDP service. All fields are mutually exclusive.
#UDPService: {
	loadBalancer?: null | #UDPServersLoadBalancer @go(LoadBalancer,*UDPServersLoadBalancer) @toml(loadBalancer,omitempty)
	weighted?:     null | #UDPWeightedRoundRobin  @go(Weighted,*UDPWeightedRoundRobin) @toml(weighted,omitempty)
}

// UDPWeightedRoundRobin is a weighted round robin UDP load-balancer of services.
#UDPWeightedRoundRobin: {
	services?: [...#UDPWRRService] @go(Services,[]UDPWRRService) @toml(services,omitempty)
}

// UDPWRRService is a reference to a UDP service load-balanced with weighted round robin.
#UDPWRRService: {
	name?:   string     @go(Name) @toml(name,omitempty)
	weight?: null | int @go(Weight,*int) @toml(weight,omitempty)
}

// UDPRouter defines the configuration for an UDP router.
#UDPRouter: {
	entryPoints?: [...string] @go(EntryPoints,[]string) @toml(entryPoints,omitempty)
	service?: string @go(Service) @toml(service,omitempty)
}

// UDPServersLoadBalancer defines the configuration for a load-balancer of UDP servers.
#UDPServersLoadBalancer: {
	servers?: [...#UDPServer] @go(Servers,[]UDPServer) @toml(servers,omitempty)
}

// UDPServer defines a UDP server configuration.
#UDPServer: {
	address?: string @go(Address) @toml(address,omitempty)
}
