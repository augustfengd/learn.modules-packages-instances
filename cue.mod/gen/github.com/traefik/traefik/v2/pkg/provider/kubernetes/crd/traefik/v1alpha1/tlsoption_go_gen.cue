// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/traefik/traefik/v2/pkg/provider/kubernetes/crd/traefik/v1alpha1

package v1alpha1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// TLSOption is the CRD implementation of a Traefik TLS Option, allowing to configure some parameters of the TLS connection.
// More info: https://doc.traefik.io/traefik/v2.9/https/tls/#tls-options
#TLSOption: {
	metav1.#TypeMeta

	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	metadata: metav1.#ObjectMeta @go(ObjectMeta)
	spec:     #TLSOptionSpec     @go(Spec)
}

// TLSOptionSpec defines the desired state of a TLSOption.
#TLSOptionSpec: {
	// MinVersion defines the minimum TLS version that Traefik will accept.
	// Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.
	// Default: VersionTLS10.
	minVersion?: string @go(MinVersion)

	// MaxVersion defines the maximum TLS version that Traefik will accept.
	// Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.
	// Default: None.
	maxVersion?: string @go(MaxVersion)

	// CipherSuites defines the list of supported cipher suites for TLS versions up to TLS 1.2.
	// More info: https://doc.traefik.io/traefik/v2.9/https/tls/#cipher-suites
	cipherSuites?: [...string] @go(CipherSuites,[]string)

	// CurvePreferences defines the preferred elliptic curves in a specific order.
	// More info: https://doc.traefik.io/traefik/v2.9/https/tls/#curve-preferences
	curvePreferences?: [...string] @go(CurvePreferences,[]string)

	// ClientAuth defines the server's policy for TLS Client Authentication.
	clientAuth?: #ClientAuth @go(ClientAuth)

	// SniStrict defines whether Traefik allows connections from clients connections that do not specify a server_name extension.
	sniStrict?: bool @go(SniStrict)

	// PreferServerCipherSuites defines whether the server chooses a cipher suite among his own instead of among the client's.
	// It is enabled automatically when minVersion or maxVersion is set.
	// Deprecated: https://github.com/golang/go/issues/45430
	preferServerCipherSuites?: bool @go(PreferServerCipherSuites)

	// ALPNProtocols defines the list of supported application level protocols for the TLS handshake, in order of preference.
	// More info: https://doc.traefik.io/traefik/v2.9/https/tls/#alpn-protocols
	alpnProtocols?: [...string] @go(ALPNProtocols,[]string)
}

// ClientAuth holds the TLS client authentication configuration.
#ClientAuth: {
	// SecretNames defines the names of the referenced Kubernetes Secret storing certificate details.
	secretNames?: [...string] @go(SecretNames,[]string)

	// ClientAuthType defines the client authentication type to apply.
	// +kubebuilder:validation:Enum=NoClientCert;RequestClientCert;RequireAnyClientCert;VerifyClientCertIfGiven;RequireAndVerifyClientCert
	clientAuthType?: string @go(ClientAuthType)
}

// TLSOptionList is a collection of TLSOption resources.
#TLSOptionList: {
	metav1.#TypeMeta

	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	metadata: metav1.#ListMeta @go(ListMeta)

	// Items is the list of TLSOption.
	items: [...#TLSOption] @go(Items,[]TLSOption)
}
